### A CI workflow template that runs linting and python testing
### TODO: Modify as needed or as desired.

name: Test tap-gitlab

on: [push]

jobs:
  linting:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only lint using the primary version used for dev
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.13
    - name: Install dependencies
      run: |
        poetry install
    - name: Run lint command from tox.ini
      run: |
        poetry run tox -e lint

  pytest:

    runs-on: ubuntu-latest
    env:
      TAP_GITLAB_PRIVATE_TOKEN: ${{secrets.GITLAB_PRIVATE_TOKEN}}
      TAP_GITLAB_GROUPS: meltano
      TAP_GITLAB_PROJECTS: meltano/demo-project
      TAP_GITLAB_ULTIMATE_LICENSE: 0
      TAP_GITLAB_FETCH_MERGE_REQUEST_COMMITS: 0
      TAP_GITLAB_FETCH_PIPELINES_EXTENDED: 0
      TAP_GITLAB_FETCH_GROUP_VARIABLES: 0
      TAP_GITLAB_FETCH_SITE_USERS: 0
      TAP_GITLAB_FETCH_PROJECT_VARIABLES: 0
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.11
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest --capture=no
